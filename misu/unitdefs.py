

############ Big list of definitions #################################################




# Area


# Volume

# Magnetic field strength
createUnit('G Gauss', 1e-4 * T, mustCreateMetricPrefixes=True)

# Dynamic viscosity
createUnit('Pa_s pascal_second_SI_unit', 1 * Pa * s, unitCategory='Dynamic viscosity')
createUnit('poise_cgs_unit ', 0.1 * Pa * s)
createUnit('pound_per_foot_hour ', 4.133789e-4 * Pa * s)
createUnit('pound_per_foot_second ', 1.488164 * Pa * s)
createUnit('pound_force_second_per_square_foot ', 47.88026 * Pa * s)
createUnit('pound_force_second_per_square_inch ', 6894.757 * Pa * s)

# Kinematic viscosity
createUnit('St stokes_cgs_unit', 1e-4 * m**2 / s, unitCategory='Kinematic viscosity')

# Energy
createUnit('boe barrel_of_oil_equivalent', 6.12e9 * J)
createUnit('BTU BTUISO British_thermal_unit_ISO', 1.0545e3 * J)
createUnit('BTUIT British_thermal_unit_International_Table', 1.05505585262e3 * J)
createUnit('BTUmean British_thermal_unit_mean', 1.05587e3 * J)
createUnit('BTUth British_thermal_unit_thermochemical', 1.054350e3 * J)
createUnit('British_thermal_unit_39_F ',  1.05967e3 * J)
createUnit('British_thermal_unit_59_F ',  1.054804e3 * J)
createUnit('British_thermal_unit_60_F ',  1.05468e3 * J)
createUnit('British_thermal_unit_63_F ',  1.0546e3 * J)
createUnit('cal calIT calorie_International_Table', 4.1868 * J)
createUnit('calorie_mean  calmean', 4.19002 * J)
createUnit('calth calorie_thermochemical', 4.184 * J)
createUnit('calorie_3_98_C ', 4.2045 * J)
createUnit('calorie_15_C ', 4.1855 * J)
createUnit('calorie_20_C ', 4.1819 * J)
createUnit('CHUIT Celsius_heat_unit_International_Table', 1.899100534716e3 * J)
createUnit('cc scc cc_atm cubic_centimetre_of_atmosphere standard_cubic_centimetre', 0.101325 * J)
createUnit('scf cu_ft_atm cubic_foot_of_atmosphere standard_cubic_foot', 2.8692044809344e3 * J)
createUnit('cubic_foot_of_natural_gas', 1.05505585262e6 * J)
createUnit('scy cubic_yard_of_atmosphere  standard_cubic_yard  cu_yd_atm', 77.4685209852288e3 * J)
createUnit('eV electronvolt', 1.60217733e-19 * J)
createUnit('erg erg_cgs_unit', 1e-7 * J)
createUnit('ft_lbf foot_pound_force', 1.3558179483314004 * J)
createUnit('ft_pdl foot_poundal', 4.21401100938048e-2 * J)
createUnit('imp_gal_atm gallon_atmosphere_imperial', 460.63256925 * J)
createUnit('gallon_atmosphere_US  US_gal_atm ', 383.5568490138 * J)
createUnit('Eh hartree  atomic_unit_of_energy', 4.359744e-18 * J)
createUnit('hph horsepower_hour', 2.684519537696172792e6 * J)
createUnit('in_lbf inch_pound_force', 0.1129848290276167 * J)
createUnit('kcal Cal kilocalorie  large_calorie', 4.1868e3 * J)
createUnit('kWh kilowatt_hour  Board_of_Trade_Unit', 3.6e6 * J)
createUnit('litre_atmosphere  l_atm  sl ', 101.325 * J)
createUnit('quad ', 1.05505585262e18 * J)
createUnit('Ry rydberg', 2.179872e-18 * J)
createUnit('therm_EC', 105.505585262e6 * J)
createUnit('therm_US', 105.4804e6 * J)
createUnit('th thermie', 4.1868e6 * J)
createUnit('TCE ton_of_coal_equivalent', 29.3076e9 * J)
createUnit('TOE ton_of_oil_equivalent', 41.868e9 * J)
createUnit('tTNT ton_of_TNT', 4.184e9 * J)

# Volumetric flow
createUnit('m3ps cubic_metre_per_second_SI_unit',  1 * m3/s, unitCategory='Volumetric Flow')
m3ps.setRepresent(as_unit=m3ps, symbol='m3/s')
createUnit('cmh', m3/hr)

createUnit('CFM cfm cubic_foot_per_minute', 4.719474432e-4 * m3/s)
createUnit('CFS cfs cubic_foot_per_second',  0.028316846592 * m3/s)
createUnit('cubic_inch_per_minute', 2.7311773e-7 * m3/s)
createUnit('cubic_inch_per_second', 1.6387064e-5 * m3/s)
createUnit('GPD gallon_US_fluid_per_day', 4.381263638e-8 * m3/s)
createUnit('GPH gallon_US_fluid_per_hour', 1.051503273e-6 * m3/s)
createUnit('GPM gallon_US_fluid_per_minute', 6.30901964e-5 * m3/s)
createUnit('LPM litre_per_minute', 1.6e-5 * m3/s)

# Force
createUnit('atomic_unit_of_force ',  8.23872206e-8 * N)
createUnit('dyn dyne dynes dyne_cgs_unit', 1e-5 * N)
createUnit('kgf kp Gf kilogram_force kilopond grave_force', 9.80665 * N)
createUnit('kip kip_force kipf klbf ', 4.4482216152605e3 * N)
createUnit('mGf milligrave_force  gravet_force gf ', 9.80665 * mN)
createUnit('ozf ounce_force', 0.2780138509537812 * N)
createUnit('lbf pound_force', 4.4482216152605 * N)
createUnit('pdl poundal', 0.138254954376 * N)
createUnit('sn sthene_mts_unit', 1e3 * N)
createUnit('tnf ton_force', 8.896443230521e3 * N)

#Length
createUnit('nm nanometre  nanometres', 1e-9 * m)
createUnit('angstrom ', 0.1 * nm)
createUnit('AU astronomical_unit AU', 149597870700 * m)
createUnit('barleycorn ', 8.46e-3 * m)
createUnit('a0 bohr atomic_unit_of_length', 5.2917720859e-11 * m)
createUnit('cable_length_imperial ', 185.3184 * m)
createUnit('cable_length_International ', 185.2 * m)
createUnit('cable_length_US ', 219.456 * m)
createUnit('ch chain_Gunters_Surveyors', 20.11684 * m)
createUnit('cubit cubits ', 0.5 * m)
createUnit('ell  ', 1.143 * m)
createUnit('fm fathom', 1.8288 * m)
createUnit('fermi', 1e-15 * m)
createUnit('finger', 0.022225 * m)
createUnit('finger_cloth', 0.1143 * m)
createUnit('ft_Ben foot_Benoit', 0.304799735 * m)
createUnit('foot_Cape', 0.314858 * m)
createUnit('foot_Clarkes', 0.3047972654 * m)
createUnit('foot_Indian ft_Ind', 0.304799514 * m)
createUnit('ft foot feet foot_International', 0.3048 * m)
createUnit('foot_Sears ft_Sear', 0.30479947 * m)
createUnit('ft_US foot_US_Survey', 0.304800610 * m)
createUnit('french_charriere', 0.3e-3 * m)
createUnit('fur furlong', 201.168 * m)
createUnit('hand', 0.1016 * m)
createUnit('inch inch_International', .0254 * m)
createUnit('lea league_land', 4828.032 * m)
createUnit('light_day ', 2.59020683712e13 * m)
createUnit('light_hour ', 1.0792528488e12 * m)
createUnit('light_minute ', 1.798754748e10 * m)
createUnit('light_second ', 299792458 * m)
createUnit('ly light_year', 9.4607304725808e15 * m)
createUnit('ln line', 0.002116 * m)
createUnit('lnk link_Gunters', 0.201168 * m)
createUnit('link_Ramsdens ', 0.3048 * m)
createUnit('mickey ', 1.27e-4 * m)
createUnit('micron', 1e-6 * m)
createUnit('mil  thou ', 2.54e-5 * m)
createUnit('mil_Sweden_and_Norway', 10000 * m)
createUnit('mile_geographical', 1853.7936 * m)
createUnit('mi mile mile_international', 1609.344 * m)
createUnit('mile_tactical_or_data', 1828.8 * m)
createUnit('mile_telegraph', 1855.3176 * m)
createUnit('mile_US_Survey', 1609.347219 * m)
createUnit('nail_cloth ', 0.05715 * m)
createUnit('NL nautical_league nl ', 5556 * m)
createUnit('nautical_mile_Admiralty  NM_Adm  nmi_Adm ', 1853.184 * m)
createUnit('NM nmi nautical_mile_international', 1852 * m)
createUnit('nautical_mile_US_pre_1954 ', 1853.248 * m)
createUnit('pace ', 0.762 * m)
createUnit('palm ', 0.0762 * m)
createUnit('parsec  pc ', 3.08567782e16 * m)
createUnit('pt point_American_English', 0.000351450 * m)
createUnit('point_Didot_European', 0.00037593985 * m)
createUnit('point_PostScript', 0.0003527 * m)
createUnit('point_TeX', 0.0003514598 * m)
createUnit('quarter ', 0.2286 * m)
createUnit('rod  pole  perch  rd ', 5.0292 * m)
createUnit('rope  rope ', 6.096 * m)
createUnit('span ', 0.2286 * m)
createUnit('spat  ', 1e12 * m)
createUnit('stick ', 0.0508 * m)
createUnit('pm stigma  bicron_picometre', 1e-12 * m)
createUnit('twp twip', 1.7638e-5 * m)
createUnit('xu x_unit siegbahn', 1.0021e-13 * m)
createUnit('yd yard yard_International', 0.9144 * m)

# Mass
createUnit('AMU atomic_mass_unit_unified', 1.66053873e-27 * kg)
createUnit('me atomic_unit_of_mass  electron_rest_mass', 9.10938215e-31 * kg)
createUnit('bag_coffee ', 60 * kg)
createUnit('bag_Portland_cement ', 42.63768278 * kg)
createUnit('barge ', 20411.65665 * kg)
createUnit('kt carat', 205.196548333 * mg)
createUnit('ct carat_metric', 200 * mg)
createUnit('clove ', 3.62873896 * kg)
createUnit('crith ', 89.9349 * mg)
createUnit('Da dalton', 1.66090210e-27 * kg)
createUnit('dram_apothecary troy  dr_t ', 3.8879346 * g)
createUnit('dram_avoirdupois  dr_av ', 1.7718451953125 * g)
createUnit('gamma ', 1e-6 * g)
createUnit('gr grain', 64.79891 * mg)
createUnit('hundredweight_long  long_cwt_or_cwt ', 50.80234544 * kg)
createUnit('hundredweight_short  cental  sh_cwt ', 45.359237 * kg)
createUnit('kip', 453.59237 * kg)
createUnit('mark ', 248.8278144 * g)
createUnit('mite ', 3.2399455 * mg)
createUnit('mite_metric ', 50 * mg)
createUnit('oz_t ounce_apothecary troy', 31.1034768 * g)
createUnit('oz_av ounce_avoirdupois', 28.349523125 * g)
createUnit('oz ounce_US_food_nutrition_labeling', 28 * g)
createUnit('pennyweight  dwt  pwt ', 1.55517384 * g)
createUnit('point ', 2 * mg)
createUnit('lb pound', 0.45359237 * kg)
createUnit('lb_av pound_avoirdupois', 0.45359237 * kg)
createUnit('pound_metric ', 500 * g)
createUnit('lb_t pound_troy', 0.3732417216 * kg)
createUnit('quarter_imperial ', 12.70058636 * kg)
createUnit('quarter_informal ', 226.796185 * kg)
createUnit('quarter_long_informal ', 254.0117272 * kg)
createUnit('q quintal_metric', 100 * kg)
createUnit('scruple_apothecary  s_ap ', 1.2959782 * g)
createUnit('sheet', 647.9891 * mg)
createUnit('slug geepound hyl', 14.593903 * kg)
createUnit('st stone', 6.35029318 * kg)
createUnit('ton_assay_long  AT ', 32.666667 * g)
createUnit('ton_assay_short  AT ', 29.166667 * g)
createUnit('ton_long long_tn_or_ton long_ton', 1016.0469088 * kg)
createUnit('ton_short sh_tn short_ton ', 907.18474 * kg)
createUnit('t tonne tonne_mts_unit metric_ton', 1000 * kg)
createUnit('wey ', 114.30527724 * kg)

# Power
createUnit('atmosphere_cubic_centimetre_per_minute  atm_ccm ', 1.68875e-3 * W)
createUnit('atmosphere_cubic_centimetre_per_second  atm_ccs ', 0.101325 * W)
createUnit('atmosphere_cubic_foot_per_hour  atm_cfh ', 0.797001244704 * W)
createUnit('atmosphere_cubic_foot_per_minute  atm_cfm ', 47.82007468224 * W)
createUnit('atmosphere_cubic_foot_per_second  atm_cfs ', 2.8692044809344e3 * W)
createUnit('BTU_International_Table_per_hour  BTUITph ', 0.293071 * W)
createUnit('BTU_International_Table_per_minute  BTUITpm ', 17.584264 * W)
createUnit('BTU_International_Table_per_second  BTUITps ', 1.05505585262e3 * W)
createUnit('calorie_International_Table_per_second  calITps ', 4.1868 * W)
createUnit('erg_per_second  ergps ', 1e-7 * W)
createUnit('foot_pound_force_per_hour ', 3.766161e-4 * W)
createUnit('foot_pound_force_per_minute ', 2.259696580552334e-2 * W)
createUnit('foot_pound_force_per_second ', 1.3558179483314004 * W)
createUnit('horsepower_boiler  bhp ', 9.810657e3 * W)
createUnit('horsepower_European_electrical  hp ', 736 * W)
createUnit('horsepower_imperial_electrical  hp ', 746 * W)
createUnit('horsepower_imperial_mechanical  hp ', 745.69987158227022 * W)
createUnit('horsepower_metric  hp ', 735.49875 * W)
createUnit('litre_atmosphere_per_minute ', 1.68875 * W)
createUnit('litre_atmosphere_per_second ', 101.325 * W)
createUnit('lusec lusec ', 1.333e-4 * W)
createUnit('poncelet  p ', 980.665 * W)
createUnit('square_foot_equivalent_direct_radiation  sq_ft_EDR ', 70.337057 * W)
createUnit('ton_of_air_conditioning ', 3504 * W)
createUnit('ton_of_refrigeration_imperial ', 3.938875e3 * W)
createUnit('ton_of_refrigeration_IT ', 3.516853e3 * W)

# Pressure
createUnit('atm atmosphere_standard', 101325 * Pa)
createUnit('atmosphere_technical  at ', 9.80665e4 * Pa)
createUnit('bar', 1e5 * Pa)
createUnit('barye_cgs_unit ', 0.1 * Pa)
createUnit('centimetre_of_mercury  cmHg ', 1.33322e3 * Pa)
createUnit('centimetre_of_water_4degC  cmH2O ', 98.0638 * Pa)
createUnit('foot_of_mercury_conventional  ftHg ', 40.63666e3 * Pa)
createUnit('foot_of_water_39_2_F  ftH2O ', 2.98898e3 * Pa)
createUnit('inch_of_mercury_conventional  inHg ', 3.386389e3 * Pa)
createUnit('inch_of_water_39_2_F  inH2O ', 249.082 * Pa)
createUnit('kilogram_force_per_square_millimetre ', 9.80665e6 * Pa)
createUnit('kip_per_square_inch  ksi ', 6.894757e6 * Pa)
createUnit('micron_micrometre_of_mercury  mHg ', 0.1333224 * Pa)
createUnit('mmHg millimetre_of_mercury', 133.3224 * Pa)
createUnit('millimetre_of_water_3_98_C  mmH2O ', 9.80638 * Pa)
createUnit('pz pieze_mts_unit  ', 1e3 * Pa)
createUnit('psf pound_per_square_foot', 47.88026 * Pa)
createUnit('psi pound_per_square_inch', 6.894757e3 * Pa)
createUnit('poundal_per_square_foot ', 1.488164 * Pa)
createUnit('short_ton_per_square_foot ', 95.760518e3 * Pa)
createUnit('torr', 133.3224 * Pa)

# Velocity
createUnit('metre_per_second_SI_unit ', 1 * m/s, unitCategory='Velocity')
metre_per_second_SI_unit.setRepresent(as_unit=metre_per_second_SI_unit, symbol='m/s')

createUnit('fph foot_per_hour', 8.466667e-5 * m/s)
createUnit('fpm foot_per_minute', 5.08e-3 * m/s)
createUnit('fps foot_per_second', 3.048e-1 * m/s)
createUnit('furlong_per_fortnight ', 1.663095e-4 * m/s)
createUnit('inch_per_hour  iph ', 7.05556e-6 * m/s)
createUnit('inch_per_minute  ipm ', 4.23333e-4 * m/s)
createUnit('inch_per_second  ips ', 2.54e-2 * m/s)
createUnit('kph kilometre_per_hour', 2.777778e-1 * m/s)
createUnit('kt kn knot', 0.514444 * m/s)
createUnit('knot_Admiralty', 0.514773 * m/s)
createUnit('M mach_number', 340 * m/s)
createUnit('mph mile_per_hour', 0.44704 * m/s)
createUnit('mile_per_minute  mpm ', 26.8224 * m/s)
createUnit('mile_per_second  mps ', 1609.344 * m/s)
createUnit('c speed_of_light_in_vacuum', 299792458 * m/s)
createUnit('speed_of_sound_in_air', 340 * m/s)

# Additional derived quantities
createUnit('kg_m3', kg/m3, unitCategory="Mass density")
kg_m3.setRepresent(as_unit=kg_m3, symbol='kg/m3')
#import pdb; pdb.set_trace()
createUnit('kg_hr', kg/hr, unitCategory="Mass flowrate")
kg_hr.setRepresent(as_unit=kg_hr, symbol='kg/hr')
createUnit('kmol_hr', kmol/hr, unitCategory="Molar flowrate")
kmol_hr.setRepresent(as_unit=kmol_hr, symbol='kmol/hr')
ncm = Ncm = (m3) * (101325*Pa) / (8.314*J/mol/K) / (273.15*K)
ncmh = Ncmh = ncm / hr
# NOTE 15 C:
scf = (ft) * (101325*Pa) / (8.314*J/mol/K) / ((273.15+15)*K)
scfm = scf / minute
scfd = scf / day
MMSCFD = scfd / 1e6
SP_OPEC = 101.560 * kPa
# NOTE! http://goldbook.iupac.org/S05910.html
SP_STP = 1e5 * Pa # http://goldbook.iupac.org/S06036.html
MMbbl = bbl / 1e6
MMscf = scf / 1e6
bcf = Bcf = scf / 1e9

# Engineering quantities
createUnit('kJ_kg_K', kJ/kg/K, unitCategory="Heat capacity mass")
kJ_kg_K.setRepresent(as_unit=kJ_kg_K, symbol='kJ/kg/K')
createUnit('kJ_kmol_K', kJ/kmol/K, unitCategory="Heat capacity mole")
kJ_kmol_K.setRepresent(as_unit=kJ_kmol_K, symbol='kJ/kmol/K')

createUnit('kJ_kg', kJ/kg, unitCategory="Specific enthalpy mass")
kJ_kg.setRepresent(as_unit=kJ_kg, symbol='kJ/kg')
createUnit('kJ_kmol', kJ/kmol, unitCategory="Specific enthalpy mole")
kJ_kmol.setRepresent(as_unit=kJ_kmol, symbol='kJ/kmol')


createUnit('W_m_K', W/m/K, unitCategory="Thermal conductivity")
W_m_K.setRepresent(as_unit=W_m_K, symbol='W/m/K')

createUnit('N_m', N/m, unitCategory="Surface tension")
N_m.setRepresent(as_unit=N_m, symbol='N/m')

createUnit('g_mol', g/mol, unitCategory="Molecular weight")
g_mol.setRepresent(as_unit=g_mol, symbol='g/mol')
